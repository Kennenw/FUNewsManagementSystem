@model ListViewModel<NewsArticleViewModel>

@{
    ViewData["Title"] = "News Articles";
}

<!-- Hero Section -->
<div class="hero-section mb-5">
    <div class="row align-items-center">
        <div class="col-lg-8">
            <h1 class="display-4 gradient-text fade-in">
                <i class="bi bi-newspaper me-3"></i>News Articles
            </h1>
            <p class="lead text-muted fade-in" style="animation-delay: 0.3s;">
                Discover and manage the latest news articles
            </p>
        </div>
        <div class="col-lg-4 text-lg-end">
            @if (User.HasClaim("Role", "1"))
            {
                <a asp-action="Create" class="btn btn-success btn-lg hover-lift fade-in" style="animation-delay: 0.6s;">
                    <i class="bi bi-plus-circle me-2"></i>Add New Article
                </a>
            }
        </div>
    </div>
</div>

<!-- Search and Filter Section -->
<div class="card glass-effect mb-5 fade-in" style="animation-delay: 0.3s;">
    <div class="card-body p-4">
        <form asp-action="Index" method="get" id="searchForm">
            <div class="row g-3 align-items-end">
                <div class="col-lg-6">
                    <label class="form-label fw-semibold">
                        <i class="bi bi-search text-primary me-2"></i>Search Articles
                    </label>
                    <div class="input-group">
                        <span class="input-group-text">
                            <i class="bi bi-search text-muted"></i>
                        </span>
                        <input type="text" name="searchQuery" value="@Model.SearchQuery"
                               class="form-control"
                               placeholder="Search by title, content, or category..."
                               autocomplete="off" />
                        <button type="submit" class="btn btn-primary" id="searchBtn">
                            <i class="bi bi-search me-1"></i>Search
                        </button>
                    </div>
                </div>
                <div class="col-lg-3">
                    <label class="form-label fw-semibold">
                        <i class="bi bi-funnel text-primary me-2"></i>Sort By
                    </label>
                    <div class="btn-group w-100" role="group">
                        <a asp-action="Index" asp-all-route-data="@(new Dictionary<string, string> {
                            { "searchQuery", Model.SearchQuery },
                            { "sortBy", "NewsTitle" },
                            { "sortOrder", Model.SortBy == "NewsTitle" && Model.SortOrder == "asc" ? "desc" : "asc" },
                            { "pageNumber", "1" },
                            { "pageSize", Model.PageSize.ToString() }
                        })" class="btn btn-outline-primary @(Model.SortBy == "NewsTitle" ? "active" : "")">
                            <i class="bi bi-sort-alpha-down me-1"></i>Title
                            @(Model.SortBy == "NewsTitle" ? (Model.SortOrder == "asc" ? "↑" : "↓") : "")
                        </a>
                        <a asp-action="Index" asp-all-route-data="@(new Dictionary<string, string> {
                            { "searchQuery", Model.SearchQuery },
                            { "sortBy", "CreatedDate" },
                            { "sortOrder", Model.SortBy == "CreatedDate" && Model.SortOrder == "asc" ? "desc" : "asc" },
                            { "pageNumber", "1" },
                            { "pageSize", Model.PageSize.ToString() }
                        })" class="btn btn-outline-primary @(Model.SortBy == "CreatedDate" ? "active" : "")">
                            <i class="bi bi-calendar3 me-1"></i>Date
                            @(Model.SortBy == "CreatedDate" ? (Model.SortOrder == "asc" ? "↑" : "↓") : "")
                        </a>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="d-flex justify-content-end">
                        <span class="badge bg-info fs-6 px-3 py-2">
                            <i class="bi bi-collection me-1"></i>
                            @Model.TotalRecords Articles
                        </span>
                    </div>
                </div>
            </div>
            <input type="hidden" name="sortBy" value="@Model.SortBy" />
            <input type="hidden" name="sortOrder" value="@Model.SortOrder" />
            <input type="hidden" name="pageNumber" value="@Model.PageNumber" />
            <input type="hidden" name="pageSize" value="@Model.PageSize" />
        </form>
    </div>
</div>

<!-- Loading Spinner -->
<div id="loadingSpinner" class="text-center d-none">
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
</div>

<!-- Articles Grid -->
@if (Model.Item.Any())
{
    <div class="row g-4 mb-5">
        @foreach (var article in Model.Item)
        {
            <div class="col-lg-6 col-xl-4">
                <div class="card h-100 hover-lift fade-in" style="animation-delay: @(Model.Item.ToList().IndexOf(article) * 0.1)s;">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <div class="d-flex align-items-center gap-2">
                            <i class="bi bi-tag-fill text-white"></i>
                            <span class="fw-semibold text-white">@article.CategoryName</span>
                        </div>
                        <span class="badge @(article.NewsStatus ? "bg-success" : "bg-secondary")">
                            @(article.NewsStatus ? "Published" : "Draft")
                        </span>
                    </div>
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title fw-bold text-primary mb-3">
                            <a asp-action="Details" asp-route-id="@article.NewsArticleId"
                               class="text-decoration-none"
                               title="@article.Headline">@article.NewsTitle</a>
                        </h5>
                        <p class="card-text text-muted mb-3 flex-grow-1">
                            @(article.Headline?.Length > 120 ? article.Headline.Substring(0, 120) + "..." : article.Headline)
                        </p>
                        @if (article.Tags.Any())
                        {
                            <div class="mb-3">
                                @foreach (var tag in article.Tags.Take(3))
                                {
                                    <span class="badge bg-light text-dark me-1 mb-1">@tag.TagName</span>
                                }
                                @if (article.Tags.Count() > 3)
                                {
                                    <span class="badge bg-light text-muted">+@(article.Tags.Count() - 3)</span>
                                }
                            </div>
                        }
                        <div class="d-flex justify-content-between text-muted small mb-3">
                            <span><i class="bi bi-calendar3 me-1"></i>@article.CreatedDate?.ToString("MMM dd, yyyy")</span>
                            <span><i class="bi bi-eye me-1"></i>ID: @article.NewsArticleId</span>
                        </div>
                        <div class="d-flex gap-2 mt-auto">
                            <a asp-action="Details" asp-route-id="@article.NewsArticleId"
                               class="btn btn-info btn-sm flex-fill">
                                <i class="bi bi-eye me-1"></i>View
                            </a>
                            @if (User.HasClaim("Role", "1"))
                            {
                                <a asp-action="Edit" asp-route-id="@article.NewsArticleId"
                                   class="btn btn-primary btn-sm flex-fill">
                                    <i class="bi bi-pencil me-1"></i>Edit
                                </a>
                                <button class="btn btn-outline-danger btn-sm"
                                        data-bs-toggle="modal"
                                        data-bs-target="#deleteModal_@article.NewsArticleId">
                                    <i class="bi bi-trash me-1"></i>Delete
                                </button>
                            }
                        </div>
                    </div>
                </div>
                @if (User.HasClaim("Role", "1"))
                {
                    <div class="modal fade" id="deleteModal_@article.NewsArticleId" tabindex="-1" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered">
                            <div class="modal-content">
                                <div class="modal-header bg-danger text-white">
                                    <h5 class="modal-title">
                                        <i class="bi bi-exclamation-triangle me-2"></i>Delete Article
                                    </h5>
                                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                                </div>
                                <div class="modal-body p-4 text-center">
                                    <i class="bi bi-trash text-danger mb-3" style="font-size: 2.5rem;"></i>
                                    <h6 class="fw-bold mb-2">Delete "@article.NewsTitle"?</h6>
                                    <p class="text-muted small">This action cannot be undone.</p>
                                </div>
                                <div class="modal-footer border-0">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                                        <i class="bi bi-x-circle me-1"></i>Cancel
                                    </button>
                                    <form asp-action="Delete" method="post">
                                        <input type="hidden" name="id" value="@article.NewsArticleId" />
                                        <button type="submit" class="btn btn-danger">
                                            <i class="bi bi-trash me-1"></i>Delete
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
}
else
{
    <div class="text-center py-5 fade-in">
        <i class="bi bi-newspaper text-muted mb-4" style="font-size: 4rem;"></i>
        <h3 class="text-muted mb-3">No Articles Found</h3>
        <p class="text-muted mb-4">
            @if (!string.IsNullOrEmpty(Model.SearchQuery))
            {
                <span>No articles match "<strong>@Model.SearchQuery</strong>"</span>
            }
            else
            {
                <span>No articles available.</span>
            }
        </p>
        @if (User.HasClaim("Role", "1"))
        {
            <a asp-action="Create" class="btn btn-primary btn-lg hover-lift">
                <i class="bi bi-plus-circle me-2"></i>Create Article
            </a>
        }
    </div>
}

<!-- Pagination -->
@if (Model.TotalPages > 1)
{
    <nav aria-label="Page navigation" class="mt-5">
        <ul class="pagination justify-content-center">
            <li class="page-item @(Model.PageNumber <= 1 ? "disabled" : "")">
                <a class="page-link" asp-action="Index" asp-all-route-data="@(new Dictionary<string, string> {
                    { "searchQuery", Model.SearchQuery },
                    { "sortBy", Model.SortBy },
                    { "sortOrder", Model.SortOrder },
                    { "pageNumber", (Model.PageNumber - 1).ToString() },
                    { "pageSize", Model.PageSize.ToString() }
                })">
                    <i class="bi bi-chevron-left me-1"></i>Prev
                </a>
            </li>
            @{
                var startPage = Math.Max(1, Model.PageNumber - 2);
                var endPage = Math.Min(Model.TotalPages, startPage + 4);
                if (endPage - startPage < 4)
                {
                    startPage = Math.Max(1, endPage - 4);
                }
            }
            @if (startPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-all-route-data="@(new Dictionary<string, string> {
                        { "searchQuery", Model.SearchQuery },
                        { "sortBy", Model.SortBy },
                        { "sortOrder", Model.SortOrder },
                        { "pageNumber", "1" },
                        { "pageSize", Model.PageSize.ToString() }
                    })">1</a>
                </li>
                @if (startPage > 2)
                {
                    <li class="page-item disabled"><span class="page-link">...</span></li>
                }
            }
            @for (var i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-all-route-data="@(new Dictionary<string, string> {
                        { "searchQuery", Model.SearchQuery },
                        { "sortBy", Model.SortBy },
                        { "sortOrder", Model.SortOrder },
                        { "pageNumber", i.ToString() },
                        { "pageSize", Model.PageSize.ToString() }
                    })">@i</a>
                </li>
            }
            @if (endPage < Model.TotalPages)
            {
                @if (endPage < Model.TotalPages - 1)
                {
                    <li class="page-item disabled"><span class="page-link">...</span></li>
                }
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-all-route-data="@(new Dictionary<string, string> {
                        { "searchQuery", Model.SearchQuery },
                        { "sortBy", Model.SortBy },
                        { "sortOrder", Model.SortOrder },
                        { "pageNumber", Model.TotalPages.ToString() },
                        { "pageSize", Model.PageSize.ToString() }
                    })">@Model.TotalPages</a>
                </li>
            }
            <li class="page-item @(Model.PageNumber >= Model.TotalPages ? "disabled" : "")">
                <a class="page-link" asp-action="Index" asp-all-route-data="@(new Dictionary<string, string> {
                    { "searchQuery", Model.SearchQuery },
                    { "sortBy", Model.SortBy },
                    { "sortOrder", Model.SortOrder },
                    { "pageNumber", (Model.PageNumber + 1).ToString() },
                    { "pageSize", Model.PageSize.ToString() }
                })">
                    Next<i class="bi bi-chevron-right ms-1"></i>
                </a>
            </li>
        </ul>
        <div class="text-center mt-3 text-muted small">
            Showing @((Model.PageNumber - 1) * Model.PageSize + 1) to
            @(Math.Min(Model.PageNumber * Model.PageSize, Model.TotalRecords)) of @Model.TotalRecords articles
        </div>
    </nav>
}

<!-- Error Display -->
@if (!string.IsNullOrEmpty(ViewBag.Error))
{
    <div class="alert alert-danger alert-dismissible fade show fade-in mt-3" role="alert">
        <i class="bi bi-exclamation-triangle-fill me-2"></i>
        <strong>Error:</strong> @ViewBag.Error
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Hover effect for cards
            const cards = document.querySelectorAll('.card');
            cards.forEach(card => {
                card.addEventListener('mouseenter', function () {
                    this.style.transform = 'translateY(-10px) scale(1.03)';
                    this.style.transition = 'all 0.3s ease';
                });
                card.addEventListener('mouseleave', function () {
                    this.style.transform = 'translateY(0) scale(1)';
                });
            });

            // Auto-focus search input if empty
            const searchInput = document.querySelector('input[name="searchQuery"]');
            if (searchInput && !searchInput.value) {
                searchInput.focus();
            }

            // Show loading spinner on form submit
            const searchForm = document.querySelector('#searchForm');
            const searchBtn = document.querySelector('#searchBtn');
            searchForm.addEventListener('submit', function () {
                searchBtn.classList.add('disabled');
                searchBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-1" role="status"></span>Searching...';
                document.getElementById('loadingSpinner').classList.remove('d-none');
            });

            // Auto-dismiss alerts
            const alert = document.querySelector('.alert');
            if (alert) {
                setTimeout(() => {
                    alert.classList.remove('show');
                    alert.classList.add('fade');
                }, 5000);
            }
        });
    </script>
    <style>
        .hero-section {
            padding: 2rem 0;
        }

        .gradient-text {
            background: linear-gradient(45deg, #007bff, #00d4ff);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .glass-effect {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .hover-lift:hover {
            transform: translateY(-5px);
            transition: transform 0.3s ease;
        }

        .fade-in {
            animation: fadeIn 0.5s ease-in;
        }

        @@keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .card-header {
            background: linear-gradient(45deg, #007bff, #00d4ff);
            color: white;
        }
    </style>
}